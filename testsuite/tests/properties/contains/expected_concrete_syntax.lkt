import lexer_example

@with_lexer(foo_lexer)
grammar foo_grammar {
    @main_rule main_rule <- ListNode(list+(NumberNode(@number)))
}

@abstract class FooNode implements Node[FooNode] {
}

class ListNode: FooNode {
    @parse_field nb_list: ASTList[FooNode, NumberNode]

    @export fun prop(): Bool = node.nb_list.map((_, i) => i).contains(1)
}

class NumberNode: FooNode implements TokenNode {
}
