import lexer_example

@abstract
class FooNode implements Node[FooNode] {
}

class Root: FooNode {
    @parse_field
    f: ASTList[FooNode]
}

class Identifier: FooNode implements TokenNode {
}

class Number: FooNode implements TokenNode {
}

@with_lexer(foo_lexer)
@with_unparsers
grammar foo_grammar {
    # Unparsers consider that empty lists are null, so we cannot check whether
    # Root.f is null to decide whether to unparse the "example" keyword: the
    # following parser is illegal.
    @main_rule
    main_rule <- Root("def" ?("example" atom_list))
    atom_list <- list*(atom)
    atom <- or(Identifier(@Identifier) | Number(@Number))
}
