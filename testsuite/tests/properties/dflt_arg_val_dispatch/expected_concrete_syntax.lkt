import lexer_example
grammar foo_grammar {
    @main_rule main_rule <- list+(or(var_decl | fun_decl))
    var_decl <- VarDecl("var" identifier)
    fun_decl <- FunDecl("def" identifier)
    identifier <- Identifier(@identifier)

}

@root_node class FooNode {
}

@abstract class Decl : FooNode {
    @parse_field name : Identifier

    @export fun prop (arg : Bool = false): Bool = arg

    fun prop (arg : Bool = false): Bool
}

class FunDecl : Decl {
}

class VarDecl : Decl {

    fun prop (arg : Bool = false): Bool = not arg
}

@token_node class Identifier : FooNode {
}
