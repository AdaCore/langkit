import lexer_example

@with_lexer(foo_lexer)
grammar foo_grammar {
    @main_rule program <- Program(
        "def" ident ?pick("{" list+(program) "}")
    )
    ident <- Id(@identifier)
}

@abstract class FooNode implements Node[FooNode] {
    @exported fun env_get_all(): Array[Entity[FooNode]] =
    node.children_env().get(null[Symbol])
}

class Id: FooNode implements TokenNode {
}

class Program: FooNode {
    @parse_field name: Id
    @parse_field program_list: ASTList[FooNode, Program]

    env_spec {
        add_to_env_kv(node.name.symbol, node)
        add_env()
    }
}
