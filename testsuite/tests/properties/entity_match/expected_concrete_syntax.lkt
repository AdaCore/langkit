grammar None_grammar {
    main_rule <- or(literal | example)
    literal <- Literal(@Number)
    example <- Example(@Example)

}

class FooNode {

    fun get_num (): Integer
}

class Example : FooNode {

    fun get_num (): Integer = 2
}

class Literal : FooNode {

    fun get_num (): Integer = 3

    fun a (): Entity[FooNode]

    public fun b (): Integer = match self.a {
        case e : Entity[Example] => e.get_num
        case c : Entity[FooNode] => c.get_num

    }

    public fun c (): Integer = match self.a {
        case e : Example => e.get_num
        case c : FooNode => c.get_num

    }

    fun a (): Entity[FooNode]
}
