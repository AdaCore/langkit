lexer l1 {
}

lexer l2 {
    val digit = p"[0-9]"

    @text()
    kw1 <- "foo"

    family f1 {
        @trivia()
        kw2 <- "bar"
        @text()
        kw3 <- "baz"
    }

    @text()
    kw4 <- "qux"
    @text()
    kw5 <- "fiou"

    @unparsing_spacing(with=f2)
    family f2 {
        @trivia()
        ws <- "[ \n]+"
        @trivia()
        com <- "#.*"
    }

    match p"'.'" {
        if previous_token is Kw2 then send(Kw3, 1)
        else send(Kw4, 2)
    }

    val p1 = p"[a-z]" & p"[a-z0-9]*"
    val p2 =
        p"aaaaaaaaaaaaaaaa" & p"bbbbbbbbbbbbbbbbbbbb" & p"ccccccccccccccccc"
    val p3 =
        p"aaaaaaaaaaaaaaaa" & p"bbbbbbbbbbbbbbbbbbbb" & p"ccccccccccccccccc"
        & "ddddddddddddddddddddd"

    @text()
    long1 <-
        "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"

    @text()
    long2 <-
        p"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
}
