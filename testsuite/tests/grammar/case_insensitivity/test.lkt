# Check that the case insenvitity feature works as expected

@case_insensitive
lexer foo_lexer {
    @trivia() Whitespace <- p"[ \n\r\t]+"

    Def <- "def"
    Equal <- "="
    Number <- p"[0-9]+|0x[0-9a-f]+"

    @symbol() Identifier <- p"[a-zA-Z_][a-zA-Z0-9_]*"
}

@with_lexer(foo_lexer)
grammar foo_grammar {
    @main_rule expr <- list*(Decl(
        "def" Identifier(@Identifier) "=" Number(@Number)
    ))
}

@abstract
class FooNode implements Node[FooNode] {
}

class Decl: FooNode {
    @parse_field name: Identifier
    @parse_field value: Number
}

class Identifier: FooNode implements TokenNode {
    @exported
    fun matches(s: Symbol): Bool = s == node.symbol
}

class Number: FooNode implements TokenNode {
}
