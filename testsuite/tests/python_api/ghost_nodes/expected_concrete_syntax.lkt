grammar None_grammar {
    main_rule <- list*(Param(name mode plus))
    plus <- ?@Plus
    name <- Name(@Identifier)
    mode <- or(
        | EnumNull(@Null)
        | EnumExample(@Example)
        | EnumDefault()
    )

}

class FooNode {
}

enum class Enum : FooNode {
    case Null, Example, Default
}

"""
List of Param.
"""
class ASTList[Param] : FooNodeBaseList {
}

class Name : FooNode {
}

class Param : FooNode {
    parse field name : Name
    parse field mode : Enum
    parse field has_plus : PlusQualifier
}

qualifier class PlusQualifier : FooNode {

    """
    Return whether this is an instance of PlusQualifierPresent
    """
    public fun as_bool (): Boolean
}
