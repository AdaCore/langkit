import lexer_example

@with_lexer(foo_lexer)
grammar foo_grammar {
    @main_rule main_rule <- list+(expr)
    expr <- or(AddExpr(expr "+" expr) | IntLit(@Number))
}

@abstract
class FooNode implements Node[FooNode] {
}

@abstract
class Expr: FooNode {
    @exported
    @lazy
    my_field: Int = 42
}

class AddExpr: Expr {
    @parse_field left: Expr
    @parse_field right: Expr
}

class IntLit: Expr implements TokenNode {
}
