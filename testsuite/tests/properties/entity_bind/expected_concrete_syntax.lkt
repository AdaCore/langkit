import lexer_example

@with_lexer(foo_lexer)
grammar foo_grammar {
    @main_rule main_rule <- Literal(@number)

}

@abstract class FooNode implements Node[FooNode] {

    @export fun prop(): Int = raise PropertyError("Property FooNode.prop not implemented")
}

class Literal : FooNode implements TokenNode {
    var: LogicVar

    fun b(): Equation = %eq(node.var, node.a())

    @export fun public_prop(): Literal = {
        val _ = node.b();

        node.as_bare_entity
    }

    fun a(): FooNode = raise PropertyError("Property Literal.a not implemented")
}
