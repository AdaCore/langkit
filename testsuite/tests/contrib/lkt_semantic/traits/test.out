Resolving test.lkt
==================
Id   <RefId "Int" test.lkt:5:28-5:31>
     references <StructDecl prelude: "Int">

Id   <RefId "Int" test.lkt:10:34-10:37>
     references <StructDecl prelude: "Int">

Id   <RefId "T" test.lkt:10:40-10:41>
     references <GenericFormalTypeDecl "T" test.lkt:8:10-8:11>

Id   <RefId "WithLength" test.lkt:14:22-14:32>
     references <TraitDecl "WithLength" test.lkt:4:1-6:2>

Id   <RefId "WithIndex" test.lkt:14:34-14:43>
     references <GenericDecl "WithIndex" test.lkt:8:1-11:2>

Id   <RefId "T" test.lkt:14:44-14:45>
     references <GenericFormalTypeDecl "T" test.lkt:13:10-13:11>

Id   <RefId "Vec" test.lkt:17:10-17:13>
     references <GenericDecl "Vec" test.lkt:13:1-15:2>

Id   <RefId "String" test.lkt:17:14-17:20>
     references <StructDecl prelude: "String">

Expr <NullLit test.lkt:17:24-17:28>
     has type <InstantiatedGenericType "Vec[String]" test.lkt:13:1-15:2>

Id   <RefId "Int" test.lkt:18:17-18:20>
     references <StructDecl prelude: "Int">

Id   <RefId "vec" test.lkt:18:23-18:26>
     references <ValDecl "vec" test.lkt:17:1-17:28>

Expr <RefId "vec" test.lkt:18:23-18:26>
     has type <InstantiatedGenericType "Vec[String]" test.lkt:13:1-15:2>

Id   <RefId "length" test.lkt:18:27-18:33>
     references <FunDecl "length" test.lkt:5:14-5:31>

Expr <RefId "length" test.lkt:18:27-18:33>
     has type <FunctionType prelude: "() -> Int">

Expr <DotExpr test.lkt:18:23-18:33>
     has type <FunctionType prelude: "() -> Int">

Expr <CallExpr test.lkt:18:23-18:35>
     has type <StructDecl prelude: "Int">

Id   <RefId "String" test.lkt:21:15-21:21>
     references <StructDecl prelude: "String">

Id   <RefId "vec" test.lkt:21:24-21:27>
     references <ValDecl "vec" test.lkt:17:1-17:28>

Expr <RefId "vec" test.lkt:21:24-21:27>
     has type <InstantiatedGenericType "Vec[String]" test.lkt:13:1-15:2>

Expr <NumLit test.lkt:21:28-21:29>
     has type <StructDecl prelude: "Int">

Expr <CallExpr test.lkt:21:24-21:30>
     has type <StructDecl prelude: "String">

