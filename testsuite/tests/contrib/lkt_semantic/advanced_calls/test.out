Resolving test.lkt
==================
Id   <RefId "Int" test.lkt:2:21-2:24>
     references <StructDecl prelude: "Int">

Id   <RefId "Bool" test.lkt:2:27-2:31>
     references <EnumTypeDecl prelude: "Bool">

Id   <RefId "true" test.lkt:2:34-2:38>
     references <EnumLitDecl prelude: "true">

Expr <RefId "true" test.lkt:2:34-2:38>
     has type <EnumTypeDecl prelude: "Bool">

Id   <RefId "Int" test.lkt:6:21-6:24>
     references <StructDecl prelude: "Int">

Id   <RefId "RecursiveCallable" test.lkt:6:27-6:44>
     references <ClassDecl "RecursiveCallable" test.lkt:5:1-7:2>

Id   <RefId "self" test.lkt:6:47-6:51>
     references <SelfDecl "self" test.lkt:5:1-7:2>

Expr <RefId "self" test.lkt:6:47-6:51>
     has type <ClassDecl "RecursiveCallable" test.lkt:5:1-7:2>

Id   <RefId "Int" test.lkt:11:19-11:22>
     references <StructDecl prelude: "Int">

Id   <RefId "Bool" test.lkt:11:27-11:31>
     references <EnumTypeDecl prelude: "Bool">

Id   <RefId "true" test.lkt:11:41-11:45>
     references <EnumLitDecl prelude: "true">

Expr <RefId "true" test.lkt:11:41-11:45>
     has type <EnumTypeDecl prelude: "Bool">

Expr <LambdaExpr test.lkt:11:34-11:45>
     has type <FunctionType prelude: "(Int) -> Bool">

Id   <RefId "Array" test.lkt:13:27-13:32>
     references <GenericDecl prelude: "Array">

Id   <RefId "MyCallable" test.lkt:13:33-13:43>
     references <ClassDecl "MyCallable" test.lkt:1:1-3:2>

Expr <ArrayLiteral test.lkt:13:47-13:49>
     has type <InstantiatedGenericType prelude: "Array[MyCallable]">

Id   <RefId "Bool" test.lkt:15:17-15:21>
     references <EnumTypeDecl prelude: "Bool">

Id   <RefId "self" test.lkt:15:24-15:28>
     references <SelfDecl "self" test.lkt:9:1-21:2>

Expr <RefId "self" test.lkt:15:24-15:28>
     has type <ClassDecl "A" test.lkt:9:1-21:2>

Id   <RefId "pouet" test.lkt:15:29-15:34>
     references <FunDecl "pouet" test.lkt:11:5-11:45>

Expr <RefId "pouet" test.lkt:15:29-15:34>
     has type <FunctionType prelude: "(Int) -> Bool">

Expr <DotExpr test.lkt:15:24-15:34>
     has type <FunctionType prelude: "(Int) -> Bool">

Expr <NumLit test.lkt:15:35-15:37>
     has type <StructDecl prelude: "Int">

Expr <CallExpr test.lkt:15:24-15:38>
     has type <EnumTypeDecl prelude: "Bool">

Id   <RefId "Bool" test.lkt:16:18-16:22>
     references <EnumTypeDecl prelude: "Bool">

Id   <RefId "MyCallable" test.lkt:16:25-16:35>
     references <ClassDecl "MyCallable" test.lkt:1:1-3:2>

Expr <CallExpr test.lkt:16:25-16:37>
     has type <ClassDecl "MyCallable" test.lkt:1:1-3:2>

Expr <NumLit test.lkt:16:38-16:40>
     has type <StructDecl prelude: "Int">

Expr <CallExpr test.lkt:16:25-16:41>
     has type <EnumTypeDecl prelude: "Bool">

Id   <RefId "Bool" test.lkt:17:18-17:22>
     references <EnumTypeDecl prelude: "Bool">

Id   <RefId "self" test.lkt:17:25-17:29>
     references <SelfDecl "self" test.lkt:9:1-21:2>

Expr <RefId "self" test.lkt:17:25-17:29>
     has type <ClassDecl "A" test.lkt:9:1-21:2>

Id   <RefId "callable_array" test.lkt:17:30-17:44>
     references <FunDecl "callable_array" test.lkt:13:5-13:49>

Expr <RefId "callable_array" test.lkt:17:30-17:44>
     has type <FunctionType prelude: "() -> Array[MyCallable]">

Expr <DotExpr test.lkt:17:25-17:44>
     has type <FunctionType prelude: "() -> Array[MyCallable]">

Expr <CallExpr test.lkt:17:25-17:46>
     has type <InstantiatedGenericType prelude: "Array[MyCallable]">

Expr <NumLit test.lkt:17:47-17:49>
     has type <StructDecl prelude: "Int">

Expr <CallExpr test.lkt:17:25-17:50>
     has type <ClassDecl "MyCallable" test.lkt:1:1-3:2>

Expr <NumLit test.lkt:17:51-17:53>
     has type <StructDecl prelude: "Int">

Expr <CallExpr test.lkt:17:25-17:54>
     has type <EnumTypeDecl prelude: "Bool">

Id   <RefId "RecursiveCallable" test.lkt:18:18-18:35>
     references <ClassDecl "RecursiveCallable" test.lkt:5:1-7:2>

Id   <RefId "RecursiveCallable" test.lkt:19:9-19:26>
     references <ClassDecl "RecursiveCallable" test.lkt:5:1-7:2>

Expr <CallExpr test.lkt:19:9-19:28>
     has type <ClassDecl "RecursiveCallable" test.lkt:5:1-7:2>

Expr <NumLit test.lkt:19:29-19:31>
     has type <StructDecl prelude: "Int">

Expr <CallExpr test.lkt:19:9-19:32>
     has type <ClassDecl "RecursiveCallable" test.lkt:5:1-7:2>

Expr <NumLit test.lkt:19:33-19:35>
     has type <StructDecl prelude: "Int">

Expr <CallExpr test.lkt:19:9-19:36>
     has type <ClassDecl "RecursiveCallable" test.lkt:5:1-7:2>

Expr <NumLit test.lkt:19:37-19:39>
     has type <StructDecl prelude: "Int">

Expr <CallExpr test.lkt:19:9-19:40>
     has type <ClassDecl "RecursiveCallable" test.lkt:5:1-7:2>

Expr <NumLit test.lkt:19:41-19:43>
     has type <StructDecl prelude: "Int">

Expr <CallExpr test.lkt:19:9-19:44>
     has type <ClassDecl "RecursiveCallable" test.lkt:5:1-7:2>

Expr <NumLit test.lkt:19:45-19:47>
     has type <StructDecl prelude: "Int">

Expr <CallExpr test.lkt:19:9-19:48>
     has type <ClassDecl "RecursiveCallable" test.lkt:5:1-7:2>

Expr <NumLit test.lkt:19:49-19:51>
     has type <StructDecl prelude: "Int">

Expr <CallExpr test.lkt:19:9-19:52>
     has type <ClassDecl "RecursiveCallable" test.lkt:5:1-7:2>

Expr <NumLit test.lkt:19:53-19:55>
     has type <StructDecl prelude: "Int">

Expr <CallExpr test.lkt:19:9-19:56>
     has type <ClassDecl "RecursiveCallable" test.lkt:5:1-7:2>

Expr <NumLit test.lkt:19:57-19:59>
     has type <StructDecl prelude: "Int">

Expr <CallExpr test.lkt:19:9-19:60>
     has type <ClassDecl "RecursiveCallable" test.lkt:5:1-7:2>

Expr <NumLit test.lkt:19:61-19:63>
     has type <StructDecl prelude: "Int">

Expr <CallExpr test.lkt:19:9-19:64>
     has type <ClassDecl "RecursiveCallable" test.lkt:5:1-7:2>

Expr <NumLit test.lkt:19:65-19:67>
     has type <StructDecl prelude: "Int">

Expr <CallExpr test.lkt:19:9-19:68>
     has type <ClassDecl "RecursiveCallable" test.lkt:5:1-7:2>

Expr <NumLit test.lkt:19:69-19:71>
     has type <StructDecl prelude: "Int">

Expr <CallExpr test.lkt:19:9-19:72>
     has type <ClassDecl "RecursiveCallable" test.lkt:5:1-7:2>

Expr <NumLit test.lkt:19:73-19:75>
     has type <StructDecl prelude: "Int">

Expr <CallExpr test.lkt:19:9-19:76>
     has type <ClassDecl "RecursiveCallable" test.lkt:5:1-7:2>

Expr <NumLit test.lkt:20:14-20:16>
     has type <StructDecl prelude: "Int">

Expr <CallExpr test.lkt:19:9-20:17>
     has type <ClassDecl "RecursiveCallable" test.lkt:5:1-7:2>

Expr <NumLit test.lkt:20:18-20:20>
     has type <StructDecl prelude: "Int">

Expr <CallExpr test.lkt:19:9-20:21>
     has type <ClassDecl "RecursiveCallable" test.lkt:5:1-7:2>

