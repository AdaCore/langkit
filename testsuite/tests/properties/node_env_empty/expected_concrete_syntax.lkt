grammar foo_grammar {
    @main_rule main_rule <- list+(decl)
    decl <- Decl("def" list+(name))
    name <- Name(@Identifier)

}

@root_node class FooNode {
}

class Decl : FooNode {
    @parse_field names : ASTList[Name]

    @export fun lookup (n : Name): FooNode =
    self.node_env.get(n.symbol, only_first=true)
}

class Name : FooNode {
}
