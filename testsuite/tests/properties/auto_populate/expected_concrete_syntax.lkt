grammar None_grammar {
    decl <- Decl(Name(@Identifier) "(" ref_list ")")
    main_rule <- list*(decl)
    ref <- Ref(Name(@Identifier))
    ref_list <- list+(ref)

}

class FooNode {
}

class Decl : FooNode {
    @parse_field name : Name
    @parse_field items : ASTList[Ref]
}

class Name : FooNode {
}

class Ref : FooNode {
    @parse_field name : Name

    @export fun decl_wrapper (): Entity[Decl] = entity.decl

    @export fun decl (): Entity[Decl] =
    self.children_env.get(self.name, only_first=true).to[Decl]!
}
