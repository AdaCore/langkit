Resolving test.lkt
==================
Id   <RefId "Bool" test.lkt:1:14-1:18>
     references <EnumTypeDecl prelude: "Bool">

Id   <RefId "PropertyError" test.lkt:1:27-1:40>
     references <StructDecl prelude: "PropertyError">

Expr <StringLit test.lkt:1:41-1:48>
     has type <StructDecl prelude: "String">

Expr <CallExpr test.lkt:1:27-1:49>
     has type <StructDecl prelude: "PropertyError">

Expr <RaiseExpr test.lkt:1:21-1:49>
     has type <EnumTypeDecl prelude: "Bool">

Id   <RefId "Bool" test.lkt:2:14-2:18>
     references <EnumTypeDecl prelude: "Bool">

Id   <RefId "PropertyError" test.lkt:2:28-2:41>
     references <StructDecl prelude: "PropertyError">

Expr <StringLit test.lkt:2:42-2:49>
     has type <StructDecl prelude: "String">

Expr <CallExpr test.lkt:2:28-2:50>
     has type <StructDecl prelude: "PropertyError">

Expr <RaiseExpr test.lkt:2:22-2:50>
     has type <EnumTypeDecl prelude: "Bool">

Expr <ParenExpr test.lkt:2:21-2:51>
     has type <EnumTypeDecl prelude: "Bool">

Id   <RefId "Bool" test.lkt:3:23-3:27>
     references <EnumTypeDecl prelude: "Bool">

Id   <RefId "PropertyError" test.lkt:3:37-3:50>
     references <StructDecl prelude: "PropertyError">

Expr <StringLit test.lkt:3:51-3:58>
     has type <StructDecl prelude: "String">

Expr <CallExpr test.lkt:3:37-3:59>
     has type <StructDecl prelude: "PropertyError">

Expr <ParenExpr test.lkt:3:36-3:60>
     has type <StructDecl prelude: "PropertyError">

Expr <RaiseExpr test.lkt:3:30-3:60>
     has type <EnumTypeDecl prelude: "Bool">

test.lkt:3:30: error: raised expression needs to be a `PropertyError` constructor call
3 | @invalid fun prop3(): Bool = raise (PropertyError("error"))
  |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Id   <RefId "PropertyError" test.lkt:7:23-7:36>
     references <StructDecl prelude: "PropertyError">

Id   <RefId "PropertyError" test.lkt:7:45-7:58>
     references <StructDecl prelude: "PropertyError">

Expr <CallExpr test.lkt:7:45-7:60>
     has type <StructDecl prelude: "PropertyError">

Expr <RaiseExpr test.lkt:7:39-7:60>
     has type <StructDecl prelude: "PropertyError">

test.lkt:7:23: error: Cannot reference `PropertyError` outside of a raise expression
7 | @invalid fun prop5(): PropertyError = raise PropertyError()
  |                       ^^^^^^^^^^^^^

Id   <RefId "Bool" test.lkt:8:23-8:27>
     references <EnumTypeDecl prelude: "Bool">

Id   <RefId "prop5" test.lkt:8:36-8:41>
     references <FunDecl "prop5" test.lkt:7:10-7:60>

Expr <RefId "prop5" test.lkt:8:36-8:41>
     has type <FunctionType prelude: "() -> PropertyError">

Expr <CallExpr test.lkt:8:36-8:43>
     has type <StructDecl prelude: "PropertyError">

Expr <RaiseExpr test.lkt:8:30-8:43>
     has type <EnumTypeDecl prelude: "Bool">

test.lkt:8:30: error: raised expression needs to be a `PropertyError` constructor call
8 | @invalid fun prop6(): Bool = raise prop5()
  |                              ^^^^^^^^^^^^^

Id   <RefId "PropertyError" test.lkt:11:22-11:35>
     references <StructDecl prelude: "PropertyError">

Expr <StringLit test.lkt:11:36-11:43>
     has type <StructDecl prelude: "String">

Expr <CallExpr test.lkt:11:22-11:44>
     has type <StructDecl prelude: "PropertyError">

test.lkt:11:22: error: Cannot reference `PropertyError` outside of a raise expression
11 | @invalid val prop7 = PropertyError("error")
   |                      ^^^^^^^^^^^^^

Id   <RefId "PropertyError" test.lkt:12:23-12:36>
     references <StructDecl prelude: "PropertyError">

Expr <StringLit test.lkt:12:37-12:44>
     has type <StructDecl prelude: "String">

Expr <CallExpr test.lkt:12:23-12:45>
     has type <StructDecl prelude: "PropertyError">

Expr <ParenExpr test.lkt:12:22-12:46>
     has type <StructDecl prelude: "PropertyError">

test.lkt:12:23: error: Cannot reference `PropertyError` outside of a raise expression
12 | @invalid val prop8 = (PropertyError("error"))
   |                       ^^^^^^^^^^^^^

Id   <RefId "Bool" test.lkt:14:14-14:18>
     references <EnumTypeDecl prelude: "Bool">

Id   <RefId "Int" test.lkt:15:11-15:14>
     references <StructDecl prelude: "Int">

Expr <NumLit test.lkt:15:17-15:18>
     has type <StructDecl prelude: "Int">

Id   <RefId "PropertyError" test.lkt:17:10-17:23>
     references <StructDecl prelude: "PropertyError">

Expr <StringLit test.lkt:17:24-17:40>
     has type <StructDecl prelude: "String">

Expr <CallExpr test.lkt:17:10-17:41>
     has type <StructDecl prelude: "PropertyError">

Expr <RaiseExpr test.lkt:17:4-17:41>
     has type <EnumTypeDecl prelude: "Bool">

Expr <BlockExpr test.lkt:14:21-18:2>
     has type <EnumTypeDecl prelude: "Bool">

Id   <RefId "Int" test.lkt:21:8-21:11>
     references <StructDecl prelude: "Int">

Expr <NumLit test.lkt:21:14-21:15>
     has type <StructDecl prelude: "Int">

Id   <RefId "Bool" test.lkt:22:24-22:28>
     references <EnumTypeDecl prelude: "Bool">

Id   <RefId "i" test.lkt:22:37-22:38>
     references <ValDecl "i" test.lkt:21:1-21:15>

Expr <RefId "i" test.lkt:22:37-22:38>
     has type <StructDecl prelude: "Int">

Expr <RaiseExpr test.lkt:22:31-22:38>
     has type <EnumTypeDecl prelude: "Bool">

test.lkt:22:31: error: raised expression needs to be a `PropertyError` constructor call
22 | @invalid fun prop10(): Bool = raise i
   |                               ^^^^^^^

Id   <RefId "Bool" test.lkt:24:18-24:22>
     references <EnumTypeDecl prelude: "Bool">

Id   <RefId "PropertyError" test.lkt:24:31-24:44>
     references <StructDecl prelude: "PropertyError">

Id   <RefId "PropertyError" test.lkt:24:45-24:58>
     references <StructDecl prelude: "PropertyError">

Expr <StringLit test.lkt:24:59-24:64>
     has type <StructDecl prelude: "String">

Expr <CallExpr test.lkt:24:45-24:65>
     has type <StructDecl prelude: "PropertyError">

Id   <RefId "exception_message" test.lkt:24:66-24:83>
     references <FieldDecl prelude: "exception_message">

Expr <RefId "exception_message" test.lkt:24:66-24:83>
     has type <StructDecl prelude: "String">

Expr <DotExpr test.lkt:24:45-24:83>
     has type <StructDecl prelude: "String">

Expr <CallExpr test.lkt:24:31-24:84>
     has type <StructDecl prelude: "PropertyError">

Expr <RaiseExpr test.lkt:24:25-24:84>
     has type <EnumTypeDecl prelude: "Bool">

test.lkt:24:25: error: raised expression needs to be a `PropertyError` constructor call
24 | @invalid val p : Bool = raise PropertyError(PropertyError("lol").exception_message)
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

