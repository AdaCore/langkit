import lexer_example

@with_lexer(foo_lexer)
grammar foo_grammar {
    @main_rule cons <- or(
        | Cons(cons "." name)
        | Cons(null(Cons) name)
    )
    name <- Name(@Identifier)
}

@abstract class FooNode implements Node[FooNode] {
    @exported fun p1(n: Cons): Cons = n?.prefix.prefix
    @exported fun p2(n: Cons): Cons = (n?.prefix).prefix
}

class Cons: FooNode {
    @parse_field @nullable prefix: Cons
    @parse_field suffix: Name
}

class Name: FooNode implements TokenNode {
}
