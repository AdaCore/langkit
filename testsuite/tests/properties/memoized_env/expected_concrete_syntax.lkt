import lexer_example
grammar foo_grammar {
    @main_rule main_rule <- Block(
        Name(@identifier) pick("(" list+(Ref(Name(@identifier))) ")")
    )

}

@abstract class FooNode implements Node {
}

class Block : FooNode {
    @parse_field name : Name
    @parse_field content : ASTList[Ref]
}

class Name : FooNode implements SymbolNode {
}

class Ref : FooNode {
    @parse_field name : Name

    @export fun referenced (): FooNode =
    node.referenced_env().env_node.as_bare_entity

    @memoized fun referenced_env (): LexicalEnv =
    node.node_env().get(node.name.symbol)?(0).children_env()
}
