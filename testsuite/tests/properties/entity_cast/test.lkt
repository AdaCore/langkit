# Test that cast expressions work on entity prefixes

import lexer_example

@with_lexer(foo_lexer)
grammar foo_grammar {
    @main_rule main_rule <- or(Literal(@Number) | BarNode("example"))
}

@abstract
class FooNode implements Node[FooNode] {
}

class BarNode: FooNode {
}

class Literal: FooNode implements TokenNode {
    fun b(): Entity[BarNode] = node.a().as[BarNode]

    @exported
    fun c(): Entity[BarNode] = node.b()

    @exported
    fun d(): Entity[BarNode] = node.a().as[BarNode]

    fun a(): Entity[FooNode] =
        raise[Entity[FooNode]] PropertyError(
            "Property Literal.a not implemented"
        )
}
