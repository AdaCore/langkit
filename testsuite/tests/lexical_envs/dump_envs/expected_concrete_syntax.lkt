import lexer_example
@with_lexer(foo_lexer)
grammar foo_grammar {
    @main_rule main_rule <- list+(any_decl)
    any_decl <- or(scope | decl)
    scope <- Scope(identifier "{" list*(any_decl) "}")
    decl <- Decl(identifier)
    identifier <- Identifier(@identifier)

}

@abstract class FooNode implements Node[FooNode] {
}

class Decl : FooNode {
    @parse_field id : Identifier
}

class Identifier : FooNode implements TokenNode {
}

class Scope : FooNode {
    @parse_field name : Identifier
    @parse_field content : ASTList[FooNode]
}
