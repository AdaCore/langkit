Testing first/last child methods
================================

<DeclList main.txt:1:1-2:8>
First child index =  1
Last child index =  2
First child = <Decl main.txt:1:1-1:2>
Last child = <Decl main.txt:1:1-1:2>

<Decl main.txt:1:1-1:2>
First child index =  1
Last child index =  2
First child = <Identifier main.txt:1:1-1:2>
Last child = <Identifier main.txt:1:1-1:2>

<Identifier main.txt:1:1-1:2>
First child index =  1
Last child index =  0
First child = None
Last child = None

<DeclErrorAbsent main.txt:1:2-1:2>
First child index =  1
Last child index =  0
First child = None
Last child = None

<Decl main.txt:2:1-2:8>
First child index =  1
Last child index =  2
First child = <Identifier main.txt:2:1-2:2>
Last child = <Identifier main.txt:2:1-2:2>

<Identifier main.txt:2:1-2:2>
First child index =  1
Last child index =  0
First child = None
Last child = None

<DeclErrorPresent main.txt:2:3-2:8>
First child index =  1
Last child index =  0
First child = None
Last child = None

<DeclList main.txt:1:1-1:1>
First child index =  1
Last child index =  0
First child = None
Last child = None

Testing Print method
====================

On the null node:
None

On the root node:
DeclList[1:1-2:8]
|  Decl[1:1-1:2]
|  |f_id:
|  |  Identifier[1:1-1:2]: a
|  |f_error:
|  |  DeclErrorAbsent[1:2-1:2]
|  Decl[2:1-2:8]
|  |f_id:
|  |  Identifier[2:1-2:2]: b
|  |f_error:
|  |  DeclErrorPresent[2:3-2:8]


On a child node:
Decl[1:1-1:2]
|f_id:
|  Identifier[1:1-1:2]: a
|f_error:
|  DeclErrorAbsent[1:2-1:2]


main.adb: Done.
Done
