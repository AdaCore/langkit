@with_abstract_list("Sequence")
class BaseNode implements Node[BaseNode] {
}

class Child : BaseNode {}

class Sequence : ASTList[BaseNode] {
    fun f() : Array[Entity[BaseNode]] = self.map((i) => i)

    fun g() : Array[Entity[Child]] = self.filtermap(
        (i) => i.as![Child], (i) => i is Child
    )

    fun h(): Entity[BaseNode] = self.at(2)
}

@synthetic
class SynthList : ASTList[BaseNode] {
}

val synth_build : SynthList =
    SynthList.builder([]: NodeBuilder[BaseNode]).build()
