import lexer_example

@with_lexer(foo_lexer)
grammar foo_grammar {
    @main_rule main_rule <- list*(decl)
    decl <- or(var_decl | fun_decl)
    var_decl <- VarDecl(NullQual("null") "var" name ";")
    fun_decl <- FunDecl(
        "def" null(NullQual) name "(" ")" ";"
    )
    name <- Identifier(@identifier)
}

@abstract class FooNode implements Node[FooNode] {
}

@abstract class Decl: FooNode {
    @parse_field @nullable is_null: NullQual
    @parse_field name: Identifier
}

class FunDecl: Decl {
}

class VarDecl: Decl {
}

class Identifier: FooNode implements TokenNode {
}

@qualifier enum class NullQual: FooNode {
}
