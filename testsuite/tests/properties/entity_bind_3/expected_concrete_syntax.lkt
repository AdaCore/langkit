import lexer_example
grammar foo_grammar {
    @main_rule main_rule <- Literal(@number)

}

@abstract class FooNode implements Node {

    @export fun prop (): Int

    fun prop (): Int
}

class Literal : FooNode implements TokenNode {
    var : LogicVar

    fun a (): FooNode

    fun node (): Literal = node.as_entity

    fun b (): Equation = %eq(node.var, node.a(), conv_prop=BareLiteral.node)

    @export fun public_pro (): Literal = {
        val _ = node.b();

        node.as_bare_entity
    }

    fun a (): FooNode
}
