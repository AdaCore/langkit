Resolving test.lkt
==================
Decl <FieldDecl "f" test.lkt:3:5-3:9>
     has_type <GenericFormalTypeDecl "T" test.lkt:1:9-1:10>

   Id   <RefId "T" test.lkt:3:8-3:9>
        has_type None
        references <GenericFormalTypeDecl "T" test.lkt:1:9-1:10>

Decl <FieldDecl "g" test.lkt:4:5-4:9>
     has_type <GenericFormalTypeDecl "U" test.lkt:1:12-1:13>

   Id   <RefId "U" test.lkt:4:8-4:9>
        has_type None
        references <GenericFormalTypeDecl "U" test.lkt:1:12-1:13>

Decl <FieldDecl "f" test.lkt:9:5-9:9>
     has_type <GenericFormalTypeDecl "T" test.lkt:7:9-7:10>

   Id   <RefId "T" test.lkt:9:8-9:9>
        has_type None
        references <GenericFormalTypeDecl "T" test.lkt:7:9-7:10>

Decl <FieldDecl "g" test.lkt:10:5-10:9>
     has_type <GenericFormalTypeDecl "T" test.lkt:7:9-7:10>

   Id   <RefId "T" test.lkt:10:8-10:9>
        has_type None
        references <GenericFormalTypeDecl "T" test.lkt:7:9-7:10>

Decl <ValDecl "v1" test.lkt:13:1-13:26>
     has_type <StructDecl "GenStruct[Int, String]" test.lkt:2:1-5:2>

   Expr <CallExpr test.lkt:13:10-13:26>
        has_type <StructDecl "GenStruct[Int, String]" test.lkt:2:1-5:2>

      Id   <RefId "GenStruct" test.lkt:13:10-13:19>
           has_type <FunctionType "(Int, String) -> GenStruct[Int, String]" test.lkt>
           references <StructDecl "GenStruct[T, U]" test.lkt:2:1-5:2>

      Expr <NumLit test.lkt:13:20-13:21>
           has_type <StructDecl prelude: "Int">

      Expr <SingleLineStringLit test.lkt:13:23-13:25>
           has_type <StructDecl prelude: "String">

<ValDecl "invalid1" test.lkt:15:1-15:33> failed nameres:
test.lkt:15:30-15:32: error: expected Int, got String
 15 | val invalid1 = GenStruct2(1, "")
    |                              ^^ 

Decl <ValDecl "invalid1" test.lkt:15:1-15:33>
     has_type None

   Expr <CallExpr test.lkt:15:16-15:33>
        has_type None

      Id   <RefId "GenStruct2" test.lkt:15:16-15:26>
           has_type None
           references None

      Expr <NumLit test.lkt:15:27-15:28>
           has_type <StructDecl prelude: "Int">

      Expr <SingleLineStringLit test.lkt:15:30-15:32>
           has_type <StructDecl prelude: "String">

