# Test that the cut/stop_cut parsers works correctly. For more information,
# check the expected_concrete_syntax.lkt file.

import lexer_example

@with_lexer(foo_lexer)
grammar foo_grammar {
    @main_rule stmt_rule <- list*(or(def | blk))
    blk <- Block("{" or(stop_cut(def) | var_def) "}")
    id <- Id(@Identifier)
    def <- Def("def" / id)
    var_def <- VarDef("def" "var" / id)
}

@abstract
class FooNode implements Node[FooNode] {
}

class Block: FooNode {
    @parse_field el: FooNode
}

class Def: FooNode {
    @parse_field id: Id
}

class Id: FooNode implements TokenNode {
}

class VarDef: FooNode {
    @parse_field id: Id
}
