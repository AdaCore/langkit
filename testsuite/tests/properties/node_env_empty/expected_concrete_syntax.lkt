import lexer_example
grammar foo_grammar {
    @main_rule main_rule <- list+(decl)
    decl <- Decl("def" list+(name))
    name <- Name(@identifier)

}

@root_node class FooNode {
}

class Decl : FooNode {
    @parse_field names : ASTList[Name]

    @export fun lookup (n : Name): FooNode = self.node_env().get_first(n.symbol)
}

class Name : FooNode {
}
