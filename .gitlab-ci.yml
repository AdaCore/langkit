variables:
  PACKAGE: $CI_PROJECT_DIR/langkit.tar.gz
  CI_FRAGMENTS: ci_fragments
  CI_FRAGMENTS_GIT: https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}:${CI_SERVER_PORT}/setton/$CI_FRAGMENTS

stages:
  - build
  - test
  - package

#########
# BUILD #
#########

langkit_build:
  services:
     - image:libadalang
     - cpu:8
     - mem:16
  stage: build
  rules:
    # Triggers on a push or pipeline
    - if: ($CI_PIPELINE_SOURCE == "pipeline" || $CI_PIPELINE_SOURCE == "push")
  script:
    - export PATH=/it/e3/bin:$PATH
    - cd /it/wave

    # Build using anod
    - anod vcs --add-repo langkit $CI_PROJECT_DIR
    - anod build --minimal --disable-cathod langkit

    # Create the langkit package
    - (cd / ; tar czf $PACKAGE it/wave/x86_64-linux/langkit/install)

  artifacts:
    paths:
      - $PACKAGE

########
# TEST #
########

langkit_test:
  services:
     - image:libadalang
     - cpu:8
     - mem:16
  stage: test
  rules:
    # Triggers on a push or pipeline
    - if: ($CI_PIPELINE_SOURCE == "pipeline" || $CI_PIPELINE_SOURCE == "push")
  script:
    - export PATH=/it/e3/bin:$PATH
    - cd /it/wave

    # Unpack langkit
    - (cd / ; tar zxf $PACKAGE)

    # Remove the artefact from CI_PROJECT_DIR: this is to make sure
    # anod doesn't think there's a local modification in the git clone
    # that would warrant a rebuild
    - rm $PACKAGE

    # Run the testsuite
    - anod test --minimal --disable-cathod langkit

    # This call to e3-testsuite-report raise an error if there is one failure
    - e3-testsuite-report --failure-exit-code 1 --xunit-output xunit_output.xml x86_64-linux/langkit-test/results/new/
    - cp xunit_output.xml $CI_PROJECT_DIR

  artifacts:
    paths:
      - xunit_output.xml
    reports:
      junit: xunit_output.xml

# The following is commented until libadalang has a pipeline definition

# The internal testsuite: this triggers a downstream pipeline
#trigger_libadalang_tests:
#  stage: test
#  rules:
#    # Triggers on a push or pipeline, but not on the master branch.
#    - if: ($CI_PIPELINE_SOURCE == "pipeline" || $CI_PIPELINE_SOURCE == "push") && $CI_COMMIT_BRANCH != "master"
#  variables:
#     ARTIFACTS_DOWNLOAD_REF: $CI_COMMIT_BRANCH
#  trigger:
#     # The downstream project
#     project: eng/libadalang/libadalang
#
#     # This says that this pipeline should fail when the downstream
#     # pipeline fails.
#     strategy: depend

###########
# PACKAGE #
###########

# This job uploads the package to the package registry.
package:
  services:
     - image:libadalang
     - cpu:8
     - mem:16
  stage: package
  rules:
     # This triggers only after a push on the master branch, or from an upstream pipeline
     - if: ($CI_PIPELINE_SOURCE == "pipeline" || $CI_PIPELINE_SOURCE == "push") && $CI_COMMIT_BRANCH == "master"
  script:
    - export PATH=/it/e3/bin:$PATH

    # Upload the package
    - git clone $CI_FRAGMENTS_GIT
    - GITLAB_TOKEN=$GITLAB_RW_TOKEN ./$CI_FRAGMENTS/upload_generic_package $CI_PROJECT_PATH $PACKAGE
