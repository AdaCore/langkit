import lexer_example
grammar foo_grammar {
    @main_rule program <- Program(
        "def" ident ?pick("{" list+(program) "}")
    )
    ident <- Id(@identifier)

}

@root_node class FooNode {

    @export fun env_get_all (): Array[FooNode] = node.children_env().get(null)
}

class Id : FooNode {
}

class Program : FooNode {
    @parse_field name : Id
    @parse_field program_list : ASTList[Program]
}

struct EnvAssoc {
    key : Symbol
    value : FooNode
    dest_env : LexicalEnv
    metadata : Metadata
}
