import lexer_example

@with_lexer(foo_lexer)
grammar foo_grammar {
    @main_rule main_rule <- Example(@example)
}

@abstract class FooNode implements Node[FooNode] {
}

class Example : FooNode implements TokenNode {

    @export fun sum(s: MyStruct): Int = s.a + s.b

    @export fun create(a: Int, b: Int): MyStruct = MyStruct(a=a, b=b)
}

struct MyStruct {
    a: Int
    b: Int
}
