Resolving test.lkt
==================
Decl <ValDecl "val1" test.lkt:1:1-1:13>
     has_type <StructDecl prelude: "Int">

   Expr <NumLit test.lkt:1:12-1:13>
        has_type <StructDecl prelude: "Int">

Decl <ValDecl "val1t" test.lkt:2:1-2:20>
     has_type <StructDecl prelude: "Int">

   Id   <RefId "Int" test.lkt:2:13-2:16>
        has_type None
        references <StructDecl prelude: "Int">

   Expr <NumLit test.lkt:2:19-2:20>
        has_type <StructDecl prelude: "Int">

Decl <ValDecl "valref" test.lkt:3:1-3:18>
     has_type <StructDecl prelude: "Int">

   Id   <RefId "val1" test.lkt:3:14-3:18>
        has_type <StructDecl prelude: "Int">
        references <ValDecl "val1" test.lkt:1:1-1:13>

Decl <ValDecl "valreft" test.lkt:4:1-4:25>
     has_type <StructDecl prelude: "Int">

   Id   <RefId "Int" test.lkt:4:15-4:18>
        has_type None
        references <StructDecl prelude: "Int">

   Id   <RefId "val1" test.lkt:4:21-4:25>
        has_type <StructDecl prelude: "Int">
        references <ValDecl "val1" test.lkt:1:1-1:13>

<ValDecl "incorrect" test.lkt:6:1-6:30> failed nameres:
test.lkt:6:26-6:30: error: expected String, got Int
 6 | val incorrect : String = val1
   |                          ^^^^ 

Decl <ValDecl "incorrect" test.lkt:6:1-6:30>
     has_type <StructDecl prelude: "String">

   Id   <RefId "String" test.lkt:6:17-6:23>
        has_type None
        references <StructDecl prelude: "String">

   Id   <RefId "val1" test.lkt:6:26-6:30>
        has_type None
        references None

