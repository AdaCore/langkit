on:
  push:
    branches:
      - master
      - stable
  pull_request:
    branches:
      - master
name: Linux CI
jobs:
  build:
    runs-on: ubuntu-latest
    name: Linux build & test
    env:
      PROCESSORS: 0
      PREFIX: "/tmp/ADALIB_DIR"
      GPR_PROJECT_PATH: /tmp/ADALIB_DIR/share/gpr
    steps:
      - name: Get langkit
        uses: actions/checkout@v2

      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install python dependencies
        run: |
            pip install -r REQUIREMENTS.dev
            pip install .

      - name: Get gprbuild for libgpr
        uses: actions/checkout@v2
        with:
          repository: AdaCore/gprbuild
          path: gprbuild

      - name: Get gnatcoll core
        uses: actions/checkout@v2
        with:
          repository: AdaCore/gnatcoll-core
          path: gnatcoll-core

      - name: Get gnatcoll iconv/gmp
        uses: actions/checkout@v2
        with:
          repository: AdaCore/gnatcoll-bindings
          path: gnatcoll-bindings

      - uses: actions/cache@v2
        with:
          path: ./cached_gnat
          key: ${{ runner.os }}-gnat-ce-2020
      - name: Get GNAT Community 2020 toolchain
        uses: ada-actions/toolchain@ce2020
        with:
          distrib: community
          install_dir: ./cached_gnat
      - name: Clean up GNAT
        # TODO: For unknown reasons, even with all caches disabled, there are
        # sometimes spurious installs of dependencies (gnatcoll-iconv, -gmp and
        # langkit_support) in cached_gnat's install. Try to uninstall them to
        # workaround this issue. We need to uninstall gpr and gnatcoll anyway,
        # as we want their latest versions.
        run: |
            sh .github/helpers/clean_up_gnat.sh

      # This step caches just the obj directories, so that when nothing has
      # changed in the dependencies, the build is much faster.
      - name: Cache build artifacts
        uses: actions/cache@v2
        id: cache
        with:
          path: |
              gprbuild/gpr/libobj
              gnatcoll-core/obj
              gnatcoll-bindings/gmp/obj
              gnatcoll-bindings/iconv/obj
              contrib/python/build/obj
              contrib/lkt/build/obj
          key: ${{ runner.os }}-build-artifacts-2

      - name: Build dependencies
        run: |
            make -C gprbuild prefix=$PREFIX libgpr.build libgpr.install
            make -C gnatcoll-core prefix=$PREFIX ENABLE_SHARED=yes build install
            python gnatcoll-bindings/iconv/setup.py build -j0 \
                --prefix=$PREFIX --library-types=static,relocatable
            python gnatcoll-bindings/iconv/setup.py install
            python gnatcoll-bindings/gmp/setup.py build -j0 \
                --prefix=$PREFIX --library-types=static,relocatable
            python gnatcoll-bindings/gmp/setup.py install

      - name: Build
        run: |
            utils/gh_wrap_errors.py ./manage.py make

      # This needs to run after the build phase, because mypy needs the stubs
      # for liblktlang and libpythonlang that are generated as part of the
      # build phase.
      - name: Run mypy checks
        run: |
            eval `./manage.py setenv`
            python utils/gh_wrap_errors.py mypy --config-file=mypy.ini

      - name: Test
        run: |
            eval `./manage.py setenv`
            ./manage.py test --no-auto-path --disable-ocaml --failure-exit-code=1
