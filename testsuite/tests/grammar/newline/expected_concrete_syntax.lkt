@track_indent
lexer foo_lexer {

    @ignore _ <- p"[ \r\t]+"
    @text example <- "example"
    @text null_tok <- "null"
    @text comma <- ","
    @text l_par <- "("
    @text r_par <- ")"
    @text l_brace <- "{"
    @text r_brace <- "}"
    @text plus <- "+"
    @text number <- p"[0-9]+"
    @symbol identifier <- p"[a-zA-Z_][a-zA-Z0-9_]*"
}
grammar foo_grammar {
    lit <- Literal(@number)
    nl <- NewLineNode(lit @newline lit)
    ind <- IndentNode(lit @newline @indent lit @dedent)
    comp <- CompositeNode(
        lit
        @newline
        lit @newline @indent lit @newline @dedent lit
    )
    @main_rule main_rule <- or(comp | ind | nl)

}

@root_node class FooNode {
}

class CompositeNode : FooNode {
    @parse_field lit_1 : Literal
    @parse_field lit_2 : Literal
    @parse_field lit_3 : Literal
    @parse_field lit_4 : Literal
}

class IndentNode : FooNode {
    @parse_field lit_1 : Literal
    @parse_field lit_2 : Literal
}

class Literal : FooNode {
}

class NewLineNode : FooNode {
    @parse_field lit_1 : Literal
    @parse_field lit_2 : Literal
}
