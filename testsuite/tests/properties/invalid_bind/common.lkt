import lexer_example

@with_lexer(foo_lexer)
grammar foo_grammar {
    @main_rule main_rule <- or(BarNode("example") | BazNode("example"))
}

dynvar dyn_node1: FooNode

class FooNode implements Node[FooNode] {
    ref_var: LogicVar
    type_var: LogicVar
}

class BarNode: FooNode {
    @ignored fun main_prop(): Equation = {
        bind dyn_node1 = node;
        node.type_var <- BazNode.conv_prop%(node.ref_var)
    }
}
