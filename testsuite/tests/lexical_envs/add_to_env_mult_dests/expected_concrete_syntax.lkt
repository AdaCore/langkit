grammar foo_grammar {
    @main_rule main_rule <- elem
    elem <- or(scope | id)
    scope <- Scope(id "{" list+(elem) "}")
    id <- Id(@Identifier)

}

@root_node class FooNode {
}

class Id : FooNode {

    @export fun get_scope (): FooNode =
    node.children_env.get("Scope", only_first=true)
}

class Scope : FooNode {
    @parse_field name : Id
    @parse_field content : ASTList[FooNode]
}

struct EnvAssoc {
    key : SymbolType
    value : FooNode
    dest_env : LexicalEnv
    metadata : Metadata
}
