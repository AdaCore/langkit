import lexer_example
grammar foo_grammar {
    @main_rule main_rule <- list+(def_rule)
    def_rule <- Def(name ?pick("+" name))
    name <- Name(@identifier)

}

@root_node class FooNode {
}

class Def : FooNode {
    @parse_field name : Name
    @parse_field ref : Name
}

@token_node class Name : FooNode {

    fun sym (): Symbol = node.symbol

    fun resolve (): FooNode = node.parent.node_env().get(node.sym())?(0)
}
