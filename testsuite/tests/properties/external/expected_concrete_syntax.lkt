import lexer_example
grammar foo_grammar {
    @main_rule main_rule <- or(Plus(atom "+" main_rule) | atom)
    atom <- Literal(@number)

}

@abstract class FooNode implements Node {
}

@abstract class Expression : FooNode {

    @export fun result (): Int
}

class Literal : Expression implements TokenNode {

    fun result (): Int
}

class Plus : Expression {
    @parse_field left : Literal
    @parse_field right : Expression

    fun result (): Int = node.left.result() + node.right.result()
}
