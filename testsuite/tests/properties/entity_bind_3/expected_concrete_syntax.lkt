import lexer_example

@with_lexer(foo_lexer)
grammar foo_grammar {
    @main_rule main_rule <- Literal(@Number)
}

@abstract
class FooNode implements Node[FooNode] {
    @exported
    fun prop(): Int = raise[Int] PropertyError("Property FooNode.prop not implemented")
}

class Literal: FooNode implements TokenNode {
    var: LogicVar

    fun node(): Entity[Literal] = node.as_entity

    fun b(): Equation = node.var <- Literal.node%(node.a())

    @exported
    fun public_pro(): Entity[Literal] = {
        val _ = node.b();

        node.as_bare_entity
    }

    fun a(): Entity[FooNode] = raise[Entity[FooNode]] PropertyError("Property Literal.a not implemented")
}
