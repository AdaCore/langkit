grammar FooGrammar {
    decl <- or(var_decl | fun_decl)
    name <- Name(@Identifier)
    @main_rule main_rule <- list*(decl)
    number <- Number(@Number)
    var_decl <- VarDecl(VarKeyword("var") name "=" expr ";")
    fun_decl <- FunDecl("def" name ";")
    expr <- or(number | ref)
    ref <- Ref(name)

}

@root_node class FooNode {
}

@abstract class Decl : FooNode {
    @abstract @parse_field name : Name
    @abstract @parse_field value : Expr
}

class FunDecl : Decl {
    @parse_field name : Name
    @parse_field value : Expr
}

class VarDecl : Decl {
    @parse_field var_kw : VarKeyword
    @parse_field name : Name
    @parse_field value : Expr
}

@abstract class Expr : FooNode {
}

class Number : Expr {
}

class Ref : Expr {
    @parse_field name : Name
}

class Name : FooNode {
}

class VarKeyword : FooNode {
}
