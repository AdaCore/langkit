include:
  - project: eng/libadalang/libadalang
    file: /utils/gitlab-ci-common.yml
  - component: $CI_SERVER_FQDN/eng/gitlab-templates/pre-commit@~latest
    inputs:
      stage: single

stages:
  - single


###############
# CHECK_ISSUE #
###############

check_issue:
  extends: .check_issue
  stage: single


##########################
# LANGKIT_BUILD_AND_TEST #
##########################

langkit_build_and_test:
  extends: .basic
  rules:
    # Run this for merge requests only
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  services:
     - image:pe-base
     - cpu:16
     - mem:16
  stage: single
  script:
    - generic_anod_ci
    - . /tmp/ci_env.sh
    - anod test langkit $ACI_TRACK_QUALIFIER --smart-rebuild
    - testsuite_reports
  artifacts:
    reports:
      junit: xunit-*.xml


#############################
# LIBADALANG_BUILD_AND_TEST #
#############################

libadalang_build_and_test:
  extends: .basic
  services:
     - image:pe-base
     - cpu:16
     - mem:16
  stage: single
  rules:
    # Run this for merge requests only
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    # We frequently push coupled changes to Libadalang and Langkit: when this
    # happens, it is no longer possible to build Libadalang with Langkit's
    # master branch and Libadalang's nightly sources.  To solve this problem,
    # always pretend that we have Libadalang changes in the pipe (it would have
    # been rebuilt anyway).
    - generic_anod_ci --add-dep eng/libadalang/libadalang
    - . /tmp/ci_env.sh
    - anod test libadalang $ACI_TRACK_QUALIFIER --smart-rebuild
    - testsuite_reports
  artifacts:
    reports:
      junit: xunit-*.xml


######
# CB #
######

continuous_builder:
  extends: .cb
  stage: single
