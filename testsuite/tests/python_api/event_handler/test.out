main.py: Starting...

== unit parsed ==

MyEH: unit_parsed_callback
  unit: <AnalysisUnit 'main.txt'>
  reparsed: False

MyEH: unit_parsed_callback
  unit: <AnalysisUnit 'main.txt'>
  reparsed: True

Uncaught exception in EventHandler.unit_parsed_callback:
Traceback (most recent call last):
  File ".../__init__.py", line XXX, in unit_parsed_func
    self.event_handler.unit_parsed_callback(
  File "<string>", line XXX, in unit_parsed_callback
  File "<string>", line XXX, in maybe_raise
ValueError: artificial exception
MyEH: unit_parsed_callback

== unit requested ==

MyEH: unit_requested_callback
  name: foo_1
  from_unit: <AnalysisUnit 'main.txt'>
  found: True
  is_not_found_error: False

MyEH: unit_requested_callback
  name: foo_2
  from_unit: <AnalysisUnit 'main.txt'>
  found: False
  is_not_found_error: False

MyEH: unit_requested_callback
  name: foo_3
  from_unit: <AnalysisUnit 'main.txt'>
  found: False
  is_not_found_error: True

Uncaught exception in EventHandler.unit_requested_callback:
Traceback (most recent call last):
  File ".../__init__.py", line XXX, in unit_requested_func
    self.event_handler.unit_requested_callback(
  File "<string>", line XXX, in unit_requested_callback
  File "<string>", line XXX, in maybe_raise
ValueError: artificial exception
MyEH: unit_requested_callback

main.py: Done.
Done
