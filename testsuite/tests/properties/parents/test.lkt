# Check that the "parents" builtin property behaves properly both in the DSL and
# in the public API.

import lexer_example

@with_lexer(foo_lexer)
grammar foo_grammar {
    @main_rule main_rule <- list+(Example(@Example))
}

@abstract
class FooNode implements Node[FooNode] {
    @exported
    fun node_parents(): Array[Entity[FooNode]] =
        node.parents().map((n) => n.as_bare_entity)

    @exported
    fun node_parents_without_self(): Array[Entity[FooNode]] =
        node.parents(with_self=false).map((n) => n.as_bare_entity)

    @exported
    fun given_node_parents(n: FooNode): Array[Entity[FooNode]] =
        n.parents().map((n) => n.as_bare_entity)

    @exported
    fun entity_parents(): Array[Entity[FooNode]] = self.parents()

    @exported
    fun entity_parents_without_self(): Array[Entity[FooNode]] =
        self.parents(with_self=false)

    @exported
    fun given_entity_parents(n: Entity[FooNode]): Array[Entity[FooNode]] =
        n.parents()
}

class Example: FooNode implements TokenNode {
}
