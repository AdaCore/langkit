grammar None_grammar is
    main_rule <- list*(or(Literal(@Number) | Identifier(@Identifier)))

end

class FooNode is
end

"""
List of RootNode.
"""
class ASTList[RootNode] : FooNodeBaseList is
end

class RootNode : FooNode is
    field var : LogicVar

    fun xref_eq (arg1 : Entity[FooNode], arg2 : Entity[FooNode]): LogicEquation

    public fun solve_eq (arg1 : Entity[FooNode], arg2 : Entity[FooNode]): Boolean = self.xref_eq(arg1, arg2).solve
end

class Identifier : RootNode is

    fun xref_eq (arg1 : Entity[FooNode], arg2 : Entity[FooNode]): LogicEquation =
        <domain(<FieldAccess .var>, [<Var Self>])>

end

class Literal : RootNode is

    fun is_eq (other : Entity[Literal]): Boolean = self.as_entity == other

    fun xref_eq (arg1 : Entity[FooNode], arg2 : Entity[FooNode]): LogicEquation =
        (
            <domain(<FieldAccess .var>, [<Var arg1>])>
        ) and (<Bind>)

end
