# Test rejection of dependency loops in composite types

import lexer_example

@with_lexer(foo_lexer)
grammar foo_grammar {
    @main_rule main_rule <- list+(Example("example"))
}

struct MyStruct {
    children: Array[MyStruct]
}

class FooNode implements Node[FooNode] {
    @exported fun get(): MyStruct = MyStruct(children=null[Array[MyStruct]])
}

class Example: FooNode {
}
