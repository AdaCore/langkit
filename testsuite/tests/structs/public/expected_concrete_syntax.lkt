import lexer_example

@with_lexer(foo_lexer)
grammar foo_grammar {
    @main_rule main_rule <- list+(Example("example"))
}

@abstract class FooNode implements Node[FooNode] {
}

class Example: FooNode implements TokenNode {
    @export fun get_struct(): MyStruct = MyStruct(
        entity_field=node, array_field=[node.as[FooNode].as_bare_entity, node.parent.as_bare_entity], bigint_field=10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b
    )

    @export fun struct_identity(s: MyStruct): MyStruct = s
}

struct MyStruct {
    entity_field: FooNode
    array_field: Array[Entity[FooNode]]
    bigint_field: BigInt
}
