# Test the newline and related parsers

@indentation_tracking
lexer foo_lexer {

    @ignored _ <- p"[ \r\t]+"
    Example <- "example"
    NullTok <- "null"
    Comma <- ","
    LPar <- "("
    RPar <- ")"
    LBrace <- "{"
    RBrace <- "}"
    Plus <- "+"
    Number <- p"[0-9]+"
    @symbol() Identifier <- p"[a-zA-Z_][a-zA-Z0-9_]*"
}
@with_lexer(foo_lexer)
grammar foo_grammar {
    lit <- Literal(@Number)
    nl <- NewLineNode(lit @Newline lit)
    ind <- IndentNode(lit @Newline @Indent lit @Dedent)
    comp <- CompositeNode(
        lit
        @Newline
        lit @Newline @Indent lit @Newline @Dedent lit
    )
    @main_rule main_rule <- or(comp | ind | nl)
}

@abstract
class FooNode implements Node[FooNode] {
}

class CompositeNode: FooNode {
    @parse_field lit_1: Literal
    @parse_field lit_2: Literal
    @parse_field lit_3: Literal
    @parse_field lit_4: Literal
}

class IndentNode: FooNode {
    @parse_field lit_1: Literal
    @parse_field lit_2: Literal
}

class Literal: FooNode implements TokenNode {
}

class NewLineNode: FooNode {
    @parse_field lit_1: Literal
    @parse_field lit_2: Literal
}
