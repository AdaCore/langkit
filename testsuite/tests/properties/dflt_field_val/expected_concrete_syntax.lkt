import lexer_example

@with_lexer(foo_lexer)
grammar foo_grammar {
    @main_rule main_rule <- list+(Example("example"))
}

@abstract class FooNode implements Node[FooNode] {

    @export fun build_1(key: String): KV = KV(key=key)

    @export fun build_2(key: String, value: Int): KV = KV(key=key, value=value)
}

class Example : FooNode implements TokenNode {
}

struct KV {
    key: String
    value: Int = 42
    node: FooNode = null
}
