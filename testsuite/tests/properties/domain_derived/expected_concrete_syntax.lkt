grammar None_grammar {
    main_rule <- list*(or(Definition(@Def name) | name), @Comma)
    name <- Name(@Identifier)

}

class FooNode {
}

class Definition : FooNode {
    @parse_field name : Name
}

class Name : FooNode {
    ref_var : LogicVar

    @export fun resolve (): Boolean =
    %domain(self.ref_var, self.node_env.get(self).map((d) => d.to[Definition])).solve

    @export fun definition (): Entity[Definition] =
    self.ref_var.get_value.to[Definition]
}
