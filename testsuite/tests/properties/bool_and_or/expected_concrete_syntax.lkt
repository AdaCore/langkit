import lexer_example

@with_lexer(foo_lexer)
grammar foo_grammar {
    @main_rule main_rule <- Example("example")
}

@abstract class FooNode implements Node[FooNode] {
    @exported fun check_and(b1: Bool, b2: Bool, n: FooNode): Bool =
    b1 and n.identity(b2)

    @exported fun check_or(b1: Bool, b2: Bool, n: FooNode): Bool =
    b1 or n.identity(b2)

    @exported fun identity(b: Bool): Bool = b
}

class Example: FooNode implements TokenNode {
}
