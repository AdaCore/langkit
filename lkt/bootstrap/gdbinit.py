
"""
This script is meant to be sourced inside GDB when debugging a program that
uses liblktlang. It installs Langkit's "GDB helpers": pretty-printers and
custom commands that are convenient when debugging liblktlang. Note that GDB
helpers require the Langkit Python library.
"""

import sys




try:
    import langkit.gdb
except ImportError as exc:
    print(
        f"{__file__}: Cannot import the 'langkit.gdb' Python package: langkit"
        " GDB helpers require it",
        file=sys.stderr,
    )
else:
    
    langkit.gdb.setup(
        lib_name='liblktlang',
        astnode_names=['Lkt_Node', 'Argument', 'Base_Lexer_Case_Rule_Alt', 'Error_Lexer_Case_Rule_Alt', 'Lexer_Case_Rule_Cond_Alt', 'Lexer_Case_Rule_Default_Alt', 'Base_Match_Branch', 'Match_Branch', 'Pattern_Match_Branch', 'Block_Expr_Clause', 'Block_String_Line', 'Class_Qualifier', 'Class_Qualifier_Absent', 'Class_Qualifier_Present', 'Decl', 'Base_Grammar_Rule_Decl', 'Grammar_Rule_Decl', 'Synthetic_Lexer_Decl', 'Base_Val_Decl', 'Node_Decl', 'Self_Decl', 'User_Val_Decl', 'Binding_Val_Decl', 'Enum_Lit_Decl', 'Explicitly_Typed_Decl', 'Component_Decl', 'Field_Decl', 'Fun_Param_Decl', 'Lambda_Param_Decl', 'Dyn_Var_Decl', 'Match_Val_Decl', 'Val_Decl', 'Fun_Decl', 'Env_Spec_Decl', 'Error_Decl', 'Generic_Decl', 'Grammar_Decl', 'Lexer_Decl', 'Lexer_Family_Decl', 'Synth_Fun_Decl', 'Synth_Param_Decl', 'Type_Decl', 'Any_Type_Decl', 'Enum_Class_Alt_Decl', 'Function_Type', 'Generic_Param_Type_Decl', 'Named_Type_Decl', 'Basic_Class_Decl', 'Class_Decl', 'Enum_Class_Decl', 'Enum_Type_Decl', 'Struct_Decl', 'Trait_Decl', 'Decl_Annotation', 'Decl_Annotation_Args', 'Dyn_Env_Wrapper', 'Elsif_Branch', 'Enum_Class_Case', 'Excludes_Null', 'Excludes_Null_Absent', 'Excludes_Null_Present', 'Expr', 'Any_Of', 'Array_Literal', 'Base_Call_Expr', 'Call_Expr', 'Logic_Call_Expr', 'Logic_Predicate', 'Logic_Propagate_Call', 'Bin_Op', 'Block_Expr', 'Cast_Expr', 'Dot_Expr', 'Error_On_Null', 'Generic_Instantiation', 'Grammar_Expr', 'Error_Grammar_Expr', 'Grammar_Cut', 'Grammar_Discard', 'Grammar_Dont_Skip', 'Grammar_List', 'Grammar_Null', 'Grammar_Opt', 'Grammar_Opt_Error', 'Grammar_Opt_Error_Group', 'Grammar_Opt_Group', 'Grammar_Or_Expr', 'Grammar_Pick', 'Grammar_Implicit_Pick', 'Grammar_Predicate', 'Grammar_Rule_Ref', 'Grammar_Skip', 'Grammar_Stop_Cut', 'Parse_Node_Expr', 'Token_Lit', 'Token_No_Case_Lit', 'Token_Pattern_Concat', 'Token_Pattern_Lit', 'Token_Ref', 'Id', 'Def_Id', 'Module_Ref_Id', 'Ref_Id', 'If_Expr', 'Isa', 'Keep_Expr', 'Lambda_Expr', 'Lit', 'Big_Num_Lit', 'Char_Lit', 'Null_Lit', 'Num_Lit', 'String_Lit', 'Block_String_Lit', 'Single_Line_String_Lit', 'Pattern_Single_Line_String_Lit', 'Logic_Assign', 'Logic_Expr', 'Logic_Propagate', 'Logic_Unify', 'Match_Expr', 'Not_Expr', 'Paren_Expr', 'Raise_Expr', 'Subscript_Expr', 'Try_Expr', 'Un_Op', 'Full_Decl', 'Grammar_List_Sep', 'Import', 'Langkit_Root', 'Lexer_Case_Rule', 'Lexer_Case_Rule_Send', 'List_Kind', 'List_Kind_One', 'List_Kind_Zero', 'Lkt_Node_Base_List', 'Argument_List', 'Base_Lexer_Case_Rule_Alt_List', 'Base_Match_Branch_List', 'Block_String_Line_List', 'Call_Expr_List', 'Decl_Annotation_List', 'Elsif_Branch_List', 'Enum_Class_Alt_Decl_List', 'Enum_Class_Case_List', 'Enum_Lit_Decl_List', 'Expr_List', 'Any_Of_List', 'Full_Decl_List', 'Decl_Block', 'Generic_Param_Decl_List', 'Fun_Param_Decl_List', 'Grammar_Expr_List', 'Grammar_Expr_List_List', 'Import_List', 'Lambda_Param_Decl_List', 'Lkt_Node_List', 'Pattern_Detail_List', 'Pattern_List', 'Ref_Id_List', 'Type_Ref_List', 'Synthetic_Type_Ref_List', 'Null_Cond_Qualifier', 'Null_Cond_Qualifier_Absent', 'Null_Cond_Qualifier_Present', 'Op', 'Op_Amp', 'Op_And', 'Op_Div', 'Op_Eq', 'Op_Gt', 'Op_Gte', 'Op_Logic_And', 'Op_Logic_Or', 'Op_Lt', 'Op_Lte', 'Op_Minus', 'Op_Mult', 'Op_Ne', 'Op_Or', 'Op_Or_Int', 'Op_Plus', 'Pattern', 'Any_Type_Pattern', 'Binding_Pattern', 'Bool_Pattern', 'Bool_Pattern_False', 'Bool_Pattern_True', 'Ellipsis_Pattern', 'Extended_Pattern', 'Filtered_Pattern', 'Integer_Pattern', 'List_Pattern', 'Not_Pattern', 'Null_Pattern', 'Or_Pattern', 'Paren_Pattern', 'Regex_Pattern', 'Tuple_Pattern', 'Type_Pattern', 'Pattern_Detail', 'Field_Pattern_Detail', 'Property_Pattern_Detail', 'Selector_Pattern_Detail', 'Selector_Call', 'Type_Ref', 'Default_List_Type_Ref', 'Function_Type_Ref', 'Generic_Type_Ref', 'Simple_Type_Ref', 'Var_Bind'],
        astnode_kinds={1: 'Argument', 2: 'Error_Lexer_Case_Rule_Alt', 3: 'Lexer_Case_Rule_Cond_Alt', 4: 'Lexer_Case_Rule_Default_Alt', 5: 'Match_Branch', 6: 'Pattern_Match_Branch', 7: 'Block_Expr_Clause', 8: 'Block_String_Line', 9: 'Class_Qualifier_Absent', 10: 'Class_Qualifier_Present', 11: 'Grammar_Rule_Decl', 12: 'Synthetic_Lexer_Decl', 13: 'Node_Decl', 14: 'Self_Decl', 15: 'Binding_Val_Decl', 16: 'Enum_Lit_Decl', 17: 'Field_Decl', 18: 'Fun_Param_Decl', 19: 'Lambda_Param_Decl', 20: 'Dyn_Var_Decl', 21: 'Match_Val_Decl', 22: 'Val_Decl', 23: 'Fun_Decl', 24: 'Env_Spec_Decl', 25: 'Error_Decl', 26: 'Generic_Decl', 27: 'Grammar_Decl', 28: 'Lexer_Decl', 29: 'Lexer_Family_Decl', 30: 'Synth_Fun_Decl', 31: 'Synth_Param_Decl', 32: 'Any_Type_Decl', 33: 'Enum_Class_Alt_Decl', 34: 'Function_Type', 35: 'Generic_Param_Type_Decl', 36: 'Class_Decl', 37: 'Enum_Class_Decl', 38: 'Enum_Type_Decl', 39: 'Struct_Decl', 40: 'Trait_Decl', 41: 'Decl_Annotation', 42: 'Decl_Annotation_Args', 43: 'Dyn_Env_Wrapper', 44: 'Elsif_Branch', 45: 'Enum_Class_Case', 46: 'Excludes_Null_Absent', 47: 'Excludes_Null_Present', 48: 'Any_Of', 49: 'Array_Literal', 50: 'Call_Expr', 51: 'Logic_Predicate', 52: 'Logic_Propagate_Call', 53: 'Bin_Op', 54: 'Block_Expr', 55: 'Cast_Expr', 56: 'Dot_Expr', 57: 'Error_On_Null', 58: 'Generic_Instantiation', 59: 'Error_Grammar_Expr', 60: 'Grammar_Cut', 61: 'Grammar_Discard', 62: 'Grammar_Dont_Skip', 63: 'Grammar_List', 64: 'Grammar_Null', 65: 'Grammar_Opt', 66: 'Grammar_Opt_Error', 67: 'Grammar_Opt_Error_Group', 68: 'Grammar_Opt_Group', 69: 'Grammar_Or_Expr', 70: 'Grammar_Pick', 71: 'Grammar_Implicit_Pick', 72: 'Grammar_Predicate', 73: 'Grammar_Rule_Ref', 74: 'Grammar_Skip', 75: 'Grammar_Stop_Cut', 76: 'Parse_Node_Expr', 77: 'Token_Lit', 78: 'Token_No_Case_Lit', 79: 'Token_Pattern_Concat', 80: 'Token_Pattern_Lit', 81: 'Token_Ref', 82: 'Id', 83: 'Def_Id', 84: 'Module_Ref_Id', 85: 'Ref_Id', 86: 'If_Expr', 87: 'Isa', 88: 'Keep_Expr', 89: 'Lambda_Expr', 90: 'Big_Num_Lit', 91: 'Char_Lit', 92: 'Null_Lit', 93: 'Num_Lit', 94: 'Block_String_Lit', 95: 'Single_Line_String_Lit', 96: 'Pattern_Single_Line_String_Lit', 97: 'Logic_Assign', 98: 'Logic_Expr', 99: 'Logic_Propagate', 100: 'Logic_Unify', 101: 'Match_Expr', 102: 'Not_Expr', 103: 'Paren_Expr', 104: 'Raise_Expr', 105: 'Subscript_Expr', 106: 'Try_Expr', 107: 'Un_Op', 108: 'Full_Decl', 109: 'Grammar_List_Sep', 110: 'Import', 111: 'Langkit_Root', 112: 'Lexer_Case_Rule', 113: 'Lexer_Case_Rule_Send', 114: 'List_Kind_One', 115: 'List_Kind_Zero', 116: 'Argument_List', 117: 'Base_Lexer_Case_Rule_Alt_List', 118: 'Base_Match_Branch_List', 119: 'Block_String_Line_List', 120: 'Call_Expr_List', 121: 'Decl_Annotation_List', 122: 'Elsif_Branch_List', 123: 'Enum_Class_Alt_Decl_List', 124: 'Enum_Class_Case_List', 125: 'Enum_Lit_Decl_List', 126: 'Expr_List', 127: 'Any_Of_List', 128: 'Full_Decl_List', 129: 'Decl_Block', 130: 'Generic_Param_Decl_List', 131: 'Fun_Param_Decl_List', 132: 'Grammar_Expr_List', 133: 'Grammar_Expr_List_List', 134: 'Import_List', 135: 'Lambda_Param_Decl_List', 136: 'Lkt_Node_List', 137: 'Pattern_Detail_List', 138: 'Pattern_List', 139: 'Ref_Id_List', 140: 'Type_Ref_List', 141: 'Synthetic_Type_Ref_List', 142: 'Null_Cond_Qualifier_Absent', 143: 'Null_Cond_Qualifier_Present', 144: 'Op_Amp', 145: 'Op_And', 146: 'Op_Div', 147: 'Op_Eq', 148: 'Op_Gt', 149: 'Op_Gte', 150: 'Op_Logic_And', 151: 'Op_Logic_Or', 152: 'Op_Lt', 153: 'Op_Lte', 154: 'Op_Minus', 155: 'Op_Mult', 156: 'Op_Ne', 157: 'Op_Or', 158: 'Op_Or_Int', 159: 'Op_Plus', 160: 'Any_Type_Pattern', 161: 'Binding_Pattern', 162: 'Bool_Pattern_False', 163: 'Bool_Pattern_True', 164: 'Ellipsis_Pattern', 165: 'Extended_Pattern', 166: 'Filtered_Pattern', 167: 'Integer_Pattern', 168: 'List_Pattern', 169: 'Not_Pattern', 170: 'Null_Pattern', 171: 'Or_Pattern', 172: 'Paren_Pattern', 173: 'Regex_Pattern', 174: 'Tuple_Pattern', 175: 'Type_Pattern', 176: 'Field_Pattern_Detail', 177: 'Property_Pattern_Detail', 178: 'Selector_Pattern_Detail', 179: 'Selector_Call', 180: 'Default_List_Type_Ref', 181: 'Function_Type_Ref', 182: 'Generic_Type_Ref', 183: 'Simple_Type_Ref', 184: 'Var_Bind'},
        prefix='lkt'
    )
