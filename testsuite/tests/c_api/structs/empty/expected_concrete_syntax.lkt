import lexer_example

@with_lexer(foo_lexer)
grammar foo_grammar {
    @main_rule main_rule <- Example(@example)
}

@abstract class FooNode implements Node[FooNode] {
}

class Example: FooNode implements TokenNode {
    @export fun new_my_struct(): MyStruct = null[MyStruct]

    @export fun new_non_empty_struct(): NonEmptyStruct = NonEmptyStruct(
        char_field='X', my_struct_field=null[MyStruct], bigint_field=42b
    )

    @export fun identity(s: MyStruct): MyStruct = s

    @export fun get_char(s: NonEmptyStruct): Char = s.char_field

    @export fun get_big_int(s: NonEmptyStruct): BigInt = s.bigint_field
}

struct MyStruct {
}

struct NonEmptyStruct {
    char_field: Char
    my_struct_field: MyStruct
    bigint_field: BigInt
}
