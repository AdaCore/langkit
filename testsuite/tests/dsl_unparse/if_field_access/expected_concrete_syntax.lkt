import lexer_example

@with_lexer(foo_lexer)
grammar foo_grammar {
    @main_rule main_rule <- list*(Example("example"))
}

@abstract class FooNode implements Node[FooNode] {
    @export fun p(): Entity[FooNode] = (
        if node is Example then node else null[Example]
    ).as[FooNode].to_entity()

    fun to_entity(): Entity[FooNode] = node.as_bare_entity
}

class Example: FooNode implements TokenNode {
}
