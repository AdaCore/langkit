import lexer_example

@with_lexer(foo_lexer)
grammar foo_grammar {
    @main_rule main_rule <- list+(Example(@example))
}

@abstract class FooNode implements Node[FooNode] {

    @export fun find_above(values: Array[Int], threshold: Int): Int =
    values.find((i) => i > threshold)

    @export fun find_entity(l: Entity[ASTList[FooNode, Example]]): Entity[Example] =
    l.find((n) => n.text() = "example")
}

class Example : FooNode implements TokenNode {
}
