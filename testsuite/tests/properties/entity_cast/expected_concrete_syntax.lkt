import lexer_example
grammar foo_grammar {
    @main_rule main_rule <- or(Literal(@number) | BarNode("example"))

}

@abstract class FooNode implements Node {
}

class BarNode : FooNode {
}

class Literal : FooNode implements TokenNode {

    fun b (): BarNode = node.a().as[BarNode]

    @export fun c (): BarNode = node.b()

    @export fun d (): BarNode = node.a().as[BarNode]

    @abstract @abstract_stub fun a (): FooNode
}
