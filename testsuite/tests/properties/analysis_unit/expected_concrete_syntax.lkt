grammar None_grammar {
    main_rule <- or(Plus(atom @Plus main_rule) | atom)
    atom <- or(Literal(@Number) | Name(@Identifier))

}

class FooNode {

    public fun eval_unit (u : InternalUnit): Integer = u.root.to[Expression].result
}

class Expression : FooNode {

    public fun result (): Integer
}

class Literal : Expression {

    fun result (): Integer
}

class Name : Expression {

    fun designated_unit (): InternalUnit

    fun result (): Integer = self.designated_unit.root.to[Expression].result
}

class Plus : Expression {
    parse field left : Expression
    parse field right : Expression

    fun result (): Integer = self.left.result + self.right.result
}
