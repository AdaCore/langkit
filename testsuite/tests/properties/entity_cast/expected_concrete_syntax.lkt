import lexer_example

@with_lexer(foo_lexer)
grammar foo_grammar {
    @main_rule main_rule <- or(Literal(@number) | BarNode("example"))
}

@abstract class FooNode implements Node[FooNode] {
}

class BarNode : FooNode {
}

class Literal : FooNode implements TokenNode {

    fun b(): BarNode = node.a().as[BarNode]

    @export fun c(): BarNode = node.b()

    @export fun d(): BarNode = node.a().as[BarNode]

    fun a(): FooNode = raise PropertyError("Property Literal.a not implemented")
}
