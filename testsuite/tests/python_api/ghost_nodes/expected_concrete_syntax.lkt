import lexer_example
grammar foo_grammar {
    @main_rule main_rule <- list+(Param(name mode plus))
    name <- Name(@identifier)
    mode <- or(
        | Enum.Null("null")
        | Enum.Example("example")
        | Enum.Default()
    )
    plus <- PlusQualifier("+")

}

@root_node class FooNode {
}

enum class Enum (Null, Example, Default) : FooNode {
}

@token_node class Name : FooNode {
}

class Param : FooNode {
    @parse_field name : Name
    @parse_field mode : Enum
    @parse_field has_plus : PlusQualifier
}

@qualifier class PlusQualifier : FooNode {
}
