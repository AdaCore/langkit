# Test Array/ASTList primitives

@abstract class FooNode implements Node[FooNode] {}
class Example : FooNode implements TokenNode {}

fun test_astlist_len(self: ASTList[FooNode, Example]): Int = self.length()
fun test_array_len(self: Array[Example]): Int = self.length()
fun test_astlist_indexing(self: ASTList[FooNode, Example]): Example = self(12)

# Test that errors flowing from a subtree to its children don't raise an
# exception.

# Here, self doesn't exist. Since we're going to try to resolve the type of
# `12` first, it's going to need to resolve `self`, which doesn't exist. This
# shouldn't crash.
@invalid fun test_astlist_indexing(a: ASTList[FooNode, Example]): String =
    self(12)
