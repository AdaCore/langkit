import lexer_example

@with_lexer(foo_lexer)
grammar foo_grammar {
    @main_rule main_rule <- Def(
        "def"
        name "{" nocat cat1 cat2 Example("example") "}"
    )
    nocat <- NoCat(@Identifier("nocat") "{" decls "}")
    cat1 <- Cat1(@Identifier("cat1") "{" decls "}")
    cat2 <- Cat2(@Identifier("cat2") "{" decls "}")
    decls <- list*(var)
    var <- Var(name)
    name <- Name(@Identifier)
}

@abstract
class FooNode implements Node[FooNode] {
}

class Cat1: FooNode {
    @parse_field decls: ASTList[FooNode, Var]

    env_spec {
        add_env()
    }
}

class Cat2: FooNode {
    @parse_field decls: ASTList[FooNode, Var]

    env_spec {
        add_env()
    }
}

class Def: FooNode {
    @parse_field name: Name
    @parse_field nocat: NoCat
    @parse_field cat1: Cat1
    @parse_field cat2: Cat2
    @parse_field example: Example

    env_spec {
        add_env()
    }
}

class Example: FooNode implements TokenNode {
    @exported
    fun lookup_all(name: Symbol): Array[Entity[FooNode]] =
        node.children_env().get(name)

    fun lookup_by_cat(name: Symbol, cats: RefCategories = RefCategories()): Array[Entity[FooNode]] =
        node.children_env().get(name, categories=cats)

    @exported
    fun lookup_none(name: Symbol): Array[Entity[FooNode]] =
        node.lookup_by_cat(name)

    @exported
    fun lookup_1(name: Symbol): Array[Entity[FooNode]] =
        node.lookup_by_cat(name, cats=RefCategories(cat1=true))

    @exported
    fun lookup_2(name: Symbol): Array[Entity[FooNode]] =
        node.lookup_by_cat(name, cats=RefCategories(cat2=true))

    env_spec {
        add_env()
        reference(
            [node.parent.as[Def].nocat.as[FooNode]], FooNode.children_env
        )
        reference(
            [node.parent.as[Def].cat1.as[FooNode]], FooNode.children_env, category="cat1"
        )
        reference(
            [node.parent.as[Def].cat2.as[FooNode]], FooNode.children_env, category="cat2"
        )
    }
}

class Name: FooNode implements TokenNode {
}

class NoCat: FooNode {
    @parse_field decls: ASTList[FooNode, Var]

    env_spec {
        add_env()
    }
}

class Var: FooNode {
    @parse_field name: Name

    env_spec {
        add_to_env_kv(node.name.symbol, node)
    }
}
