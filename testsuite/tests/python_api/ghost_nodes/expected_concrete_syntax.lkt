grammar FooGrammar {
    main_rule <- list*(Param(name mode plus))
    plus <- ?"+"
    name <- Name(@Identifier)
    mode <- or(
        | EnumNull("null")
        | EnumExample("example")
        | EnumDefault()
    )

}

@root_node class FooNode {
}

@abstract @enum_node(Null, Example, Default) class Enum : FooNode {
}

class Name : FooNode {
}

class Param : FooNode {
    @parse_field name : Name
    @parse_field mode : Enum
    @parse_field has_plus : PlusQualifier
}

@abstract @qualifier class PlusQualifier : FooNode {

    ## Return whether this is an instance of PlusQualifierPresent
    @export fun as_bool (): Boolean
}
