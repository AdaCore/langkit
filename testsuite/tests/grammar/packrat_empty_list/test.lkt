# Test that nested trailing empty lists are correctly handled in node creation

import lexer_example

@with_lexer(foo_lexer)
grammar foo_grammar {
    @main_rule main <- list+(def_rule)
    def_rule <- Def("def" name ?def_rule values)
    values <- Values(list*(Number(@Number)))
    name <- Name(@Identifier)
}

@abstract
class FooNode implements Node[FooNode] {
}

class Def: FooNode {
    @parse_field name: Name
    @parse_field @nullable defs: Def
    @parse_field values: Values
}

class Name: FooNode implements TokenNode {
}

class Number: FooNode implements TokenNode {
}

class Values: FooNode {
    @parse_field items: ASTList[Number]
}
