grammar None_grammar {
    main_rule <- list*(or(Definition(@Def name) | name), @Comma)
    name <- Name(@Identifier)

}

class FooNode {
}

class Definition : FooNode {
    parse field name : Name
}

"""
List of FooNode.

This list node can contain one of the following nodes:

* ${node_name(T.Definition)}
* ${node_name(T.Name)}
"""
class ASTList[FooNode] : FooNodeBaseList {
}

class Name : FooNode {
    field ref_var : LogicVar

    public fun resolve (): Boolean = <domain(<FieldAccess .ref_var>, <map>)>.solve

    public fun definition (): Entity[Definition] = self.ref_var.get_value.to[Definition]
}
